(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var data;

data = [
  {
    'value': '1',
    'label': 'one'
  }, {
    'value': '2',
    'label': 'two'
  }, {
    'value': '3',
    'label': 'three'
  }
];

module.exports.autocomplete = $(function() {
  $('input#txtKeyword').autocompleter;
  ({
    source: data,
    focusOpen: false
  });
});


},{}],2:[function(require,module,exports){
var PositivePointArray, negativeHeatmap, negativeLocationData, negativePointArray, positiveGradient, positiveHeatmap, positiveLocationData;

positiveLocationData = [
  {
    location: new google.maps.LatLng(51.511461, -0.0822538),
    weight: 8
  }, {
    location: new google.maps.LatLng(51.511645, -0.081428),
    weight: 2
  }, {
    location: new google.maps.LatLng(51.512086, -0.080687),
    weight: 4
  }, {
    location: new google.maps.LatLng(51.512480, -0.078906),
    weight: 0.8
  }, {
    location: new google.maps.LatLng(51.513060, -0.078349),
    weight: 1
  }
];

negativeLocationData = [
  {
    location: new google.maps.LatLng(51.514362, -0.079676),
    weight: 8
  }, {
    location: new google.maps.LatLng(51.513895, -0.079462),
    weight: 2
  }, {
    location: new google.maps.LatLng(51.513841, -0.078775),
    weight: 4
  }, {
    location: new google.maps.LatLng(51.513547, -0.077337),
    weight: 0.8
  }, {
    location: new google.maps.LatLng(51.514068, -0.078067),
    weight: 1
  }
];

PositivePointArray = new google.maps.MVCArray(positiveLocationData);

positiveHeatmap = new google.maps.visualization.HeatmapLayer({
  data: PositivePointArray
});

negativePointArray = new google.maps.MVCArray(negativeLocationData);

negativeHeatmap = new google.maps.visualization.HeatmapLayer({
  data: negativePointArray
});

positiveGradient = ['rgba(0, 255, 255, 0)', 'rgba(0, 255, 255, 1)', 'rgba(0, 191, 255, 1)', 'rgba(0, 127, 255, 1)', 'rgba(0, 63, 255, 1)', 'rgba(0, 0, 255, 1)', 'rgba(0, 0, 223, 1)', 'rgba(0, 0, 191, 1)', 'rgba(0, 0, 159, 1)', 'rgba(0, 0, 127, 1)', 'rgba(63, 0, 91, 1)', 'rgba(127, 0, 63, 1)', 'rgba(191, 0, 31, 1)', 'rgba(255, 0, 0, 1)'];

positiveHeatmap.set('gradient', positiveGradient);

module.exports.positiveHeatmap = positiveHeatmap;

module.exports.negativeHeatmap = negativeHeatmap;


},{}],3:[function(require,module,exports){
var initialize;

initialize = function() {
  var autocompleteModule, data, heatmapModule, map, optionsModule, searchModule, themeModule;
  themeModule = require('../map/theme-module.coffee');
  optionsModule = require('../map/options-module.coffee');
  heatmapModule = require('../map/heatmap-module.coffee');
  searchModule = require('../map/search-module.coffee');
  autocompleteModule = require('../map/autocomplete-module.coffee');
  map = new google.maps.Map(document.getElementById('map-canvas'), optionsModule.mapOptions);
  map.mapTypes.set('map_style', themeModule.styledMap);
  map.setMapTypeId('map_style');
  heatmapModule.positiveHeatmap.setMap(map);
  heatmapModule.negativeHeatmap.setMap(map);
  searchModule.initiatePlaceSearch(map);
  data = [
    {
      'value': '11',
      'label': 'one'
    }, {
      'value': '2',
      'label': 'two'
    }, {
      'value': '3',
      'label': 'three'
    }
  ];
  $(document).ready(function() {
    $('input#txtKeyword').autocompleter({
      source: data
    });
  });
};

google.maps.event.addDomListener(window, 'load', initialize);


},{"../map/autocomplete-module.coffee":1,"../map/heatmap-module.coffee":2,"../map/options-module.coffee":4,"../map/search-module.coffee":5,"../map/theme-module.coffee":6}],4:[function(require,module,exports){
var mapOptions;

mapOptions = {
  center: new google.maps.LatLng(51.5068, -0.1225),
  zoom: 13,
  streetViewControl: false,
  panControl: false,
  mapTypeControlOptions: {
    style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
    position: google.maps.ControlPosition.LEFT_TOP,
    mapTypeIds: ['map_style', google.maps.MapTypeId.SATELLITE]
  },
  zoomControlOptions: {
    style: google.maps.ZoomControlStyle.LARGE,
    position: google.maps.ControlPosition.LEFT_CENTER
  }
};

module.exports.mapOptions = mapOptions;


},{}],5:[function(require,module,exports){
var initiateSearch;

initiateSearch = function(map) {
  var autocomplete, infowindow, input, marker;
  input = document.getElementById('txtLocation');
  autocomplete = new google.maps.places.Autocomplete(input);
  infowindow = new google.maps.InfoWindow;
  marker = new google.maps.Marker({
    map: map,
    anchorPoint: new google.maps.Point(0, -29)
  });
  return google.maps.event.addListener(autocomplete, 'place_changed', function() {
    var address, address_parts, place;
    infowindow.close();
    marker.setVisible(false);
    place = autocomplete.getPlace();
    if (!place.geometry) {
      window.alert('Autocomplete\'s returned place contains no geometry');
      return;
    }
    if (place.geometry.viewport) {
      map.fitBounds(place.geometry.viewport);
    } else {
      map.setCenter(place.geometry.location);
      map.setZoom(17);
    }
    marker.setIcon({
      url: place.icon,
      size: new google.maps.Size(71, 71),
      origin: new google.maps.Point(0, 0),
      anchor: new google.maps.Point(17, 34),
      scaledSize: new google.maps.Size(35, 35)
    });
    marker.setPosition(place.geometry.location);
    marker.setVisible(true);
    address = '';
    if (place.address_components) {
      address_parts = place.address_components;
      address = [address_parts[1] && address_parts[1].short_name || '', address_parts[0] && address_parts[0].short_name || '', address_parts[2] && address_parts[2].short_name || ''].join(' ');
    }
    infowindow.setContent(("<div><strong>" + place.name + "</strong><br>") + address);
    infowindow.open(map, marker);
  });
};

module.exports.initiatePlaceSearch = initiateSearch;


},{}],6:[function(require,module,exports){
var styles;

styles = [
  {
    stylers: [
      {
        hue: '#00ffe6'
      }, {
        saturation: -20
      }
    ]
  }, {
    featureType: 'road',
    elementType: 'geometry',
    stylers: [
      {
        lightness: 100
      }, {
        visibility: 'simplified'
      }
    ]
  }, {
    featureType: 'road',
    elementType: 'labels',
    stylers: [
      {
        visibility: 'off'
      }
    ]
  }
];

module.exports.styledMap = new google.maps.StyledMapType(styles, {
  name: 'Sentiment Map'
});


},{}]},{},[3])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
